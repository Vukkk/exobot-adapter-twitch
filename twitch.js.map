{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///twitch.js","webpack:///webpack/bootstrap 3953b34f49427510f074","webpack:///external \"@exoplay/exobot\"","webpack:///external \"tmi.js\"","webpack:///./src/twitch.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","Object","defineProperty","configurable","enumerable","get","o","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_0_tmi_js__","__WEBPACK_IMPORTED_MODULE_0_tmi_js___default","__esModule","__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__","__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default","EVENTS","TwitchAdapter","_createClass","defineProperties","target","props","length","descriptor","key","protoProps","staticProps","_get","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","connecting","connected","logon","disconnected","reconnect","chat","emoteonly","join","part","mods","notice","ping","pong","roomstate","slowmode","subscribers","subscription","timeout","whisper","_Adapter","_ref","username","oauthPassword","_ref$channels","channels","_this","apply","arguments","_initialiseProps","bot","_this2","log","critical","client","a","identity","password","options","debug","secure","logger","info","bind","warn","warning","error","connection","cluster","connect","keys","forEach","twitchEvent","mappedFn","on","_bot$emitter","_len","args","Array","_key","emitter","emit","concat","message","text","channel","user","say","_this3","twitchConnecting","status","STATUS","CONNECTING","twitchConnected","CONNECTED","id","twitchLogon","twitchDisconnected","DISCONNECTED","twitchReconnect","RECONNECTING","twitchChat","twitchUser","receive","twitchEmoteonly","twitchJoin","enter","twitchPart","leave","twitchPing","twitchWhisper","receiveWhisper","twitchPong","twitchRoomstate","twitchSlowmode","twitchSubscribers","twitchSubscription","twitchTimeout","twitchMods","twitchNotice"],"mappings":"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","file":"twitch.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@exoplay/exobot\"), require(\"tmi.js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@exoplay/exobot\", \"tmi.js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twitch.js\"] = factory(require(\"@exoplay/exobot\"), require(\"tmi.js\"));\n\telse\n\t\troot[\"twitch.js\"] = factory(root[\"@exoplay/exobot\"], root[\"tmi.js\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@exoplay/exobot\"), require(\"tmi.js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@exoplay/exobot\", \"tmi.js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twitch.js\"] = factory(require(\"@exoplay/exobot\"), require(\"tmi.js\"));\n\telse\n\t\troot[\"twitch.js\"] = factory(root[\"@exoplay/exobot\"], root[\"tmi.js\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@exoplay/exobot\");\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"tmi.js\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tmi_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tmi_js___default = __WEBPACK_IMPORTED_MODULE_0_tmi_js__ && __WEBPACK_IMPORTED_MODULE_0_tmi_js__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_0_tmi_js__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_0_tmi_js__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_0_tmi_js___default, 'a', __WEBPACK_IMPORTED_MODULE_0_tmi_js___default);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__ && __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default, 'a', __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default);\n\n/* harmony export */ __webpack_require__.d(exports, \"EVENTS\", function() { return EVENTS; });\n/* harmony export */ __webpack_require__.d(exports, \"TwitchAdapter\", function() { return TwitchAdapter; });var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\nvar EVENTS = {\n  connecting: 'twitchConnecting',\n  connected: 'twitchConnected',\n  logon: 'twitchLogon',\n  disconnected: 'twitchDisconnected',\n  reconnect: 'twitchReconnect',\n  chat: 'twitchChat',\n  emoteonly: 'twitchEmoteonly',\n  join: 'twitchJoin',\n  part: 'twitchPart',\n  mods: 'twitchMods',\n  notice: 'twitchNotice',\n  ping: 'twitchPing',\n  pong: 'twitchPong',\n  roomstate: 'twitchRoomstate',\n  slowmode: 'twitchSlowmode',\n  subscribers: 'twitchSubscribers',\n  subscription: 'twitchSubscription',\n  timeout: 'twitchTimeout',\n  whisper: 'twitchWhisper'\n};\n\nvar TwitchAdapter = function (_Adapter) {\n  _inherits(TwitchAdapter, _Adapter);\n\n  function TwitchAdapter(_ref) {\n    var username = _ref.username;\n    var oauthPassword = _ref.oauthPassword;\n    var _ref$channels = _ref.channels;\n    var channels = _ref$channels === undefined ? [] : _ref$channels;\n\n    _classCallCheck(this, TwitchAdapter);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TwitchAdapter).apply(this, arguments));\n\n    _initialiseProps.call(_this);\n\n    _this.username = username;\n    _this.oauthPassword = oauthPassword;\n    _this.channels = channels;\n    return _this;\n  }\n\n  _createClass(TwitchAdapter, [{\n    key: 'register',\n    value: function register(bot) {\n      var _this2 = this;\n\n      _get(Object.getPrototypeOf(TwitchAdapter.prototype), 'register', this).apply(this, arguments);\n\n      var username = this.username;\n      var oauthPassword = this.oauthPassword;\n      var channels = this.channels;\n\n\n      if (!username || !oauthPassword) {\n        bot.log.error('username and oauthPassword are required to connect to Twitch.');\n        return;\n      }\n\n      if (!channels.length) {\n        bot.log.critical('No channels passed to Twitch adapter to connect to.');\n      }\n\n      this.client = new __WEBPACK_IMPORTED_MODULE_0_tmi_js___default.a.client({\n        channels: channels,\n        identity: {\n          username: username,\n          password: oauthPassword\n        },\n        options: {\n          debug: true\n        },\n        secure: true,\n        reconnect: true,\n        logger: {\n          info: bot.log.info.bind(bot.log),\n          warn: bot.log.warning.bind(bot.log),\n          error: bot.log.error.bind(bot.log)\n        },\n        connection: {\n          cluster: 'aws'\n        }\n      });\n\n      this.client.connect();\n\n      Object.keys(EVENTS).forEach(function (twitchEvent) {\n        var mappedFn = _this2[EVENTS[twitchEvent]];\n        _this2.client.on(twitchEvent, function () {\n          return mappedFn.apply(undefined, arguments);\n        });\n        _this2.client.on(twitchEvent, function () {\n          var _bot$emitter;\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          (_bot$emitter = _this2.bot.emitter).emit.apply(_bot$emitter, ['twitch-' + twitchEvent].concat(args));\n        });\n      });\n    }\n  }, {\n    key: 'send',\n    value: function send(message) {\n      this.bot.log.debug('Sending ' + message.text + ' to ' + message.channel);\n\n      if (message.whisper) {\n        return this.client.whisper(message.user.name, message.text);\n      }\n\n      this.client.say(message.channel, message.text);\n    }\n  }, {\n    key: 'getUserIdByUserName',\n    value: function getUserIdByUserName(name) {\n      // return username as the id\n      return name;\n    }\n  }]);\n\n  return TwitchAdapter;\n}(__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"]);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.name = 'Twitch';\n\n  this.twitchConnecting = function () {\n    _this3.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.CONNECTING;\n  };\n\n  this.twitchConnected = function () {\n    _this3.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.CONNECTED;\n    _this3.bot.emitter.emit('connected', _this3.id);\n    _this3.bot.log.notice('Connected to Twitch.');\n  };\n\n  this.twitchLogon = function () {\n    _this3.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.CONNECTED;\n    _this3.bot.log.notice('Successfully logged on to Twitch.');\n  };\n\n  this.twitchDisconnected = function () {\n    _this3.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.DISCONNECTED;\n    _this3.bot.log.warning('Disconnected from Twitch.');\n  };\n\n  this.twitchReconnect = function () {\n    _this3.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.RECONNECTING;\n    _this3.bot.log.notice('Reconnecting to Twitch.');\n  };\n\n  this.twitchChat = function (channel, twitchUser, text) {\n    if (twitchUser.username === _this3.username) {\n      return;\n    }\n    var user = new __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"User\"](twitchUser.username);\n    _this3.receive({ user: user, text: text, channel: channel });\n  };\n\n  this.twitchEmoteonly = function () {};\n\n  this.twitchJoin = function (channel, username) {\n    if (username !== _this3.username) {\n      return;\n    }\n    var user = new __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"User\"](username);\n    return _this3.enter({ user: user, channel: channel });\n  };\n\n  this.twitchPart = function (channel, username) {\n    if (username !== _this3.username) {\n      return;\n    }\n    var user = new __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"User\"](username);\n    return _this3.leave({ user: user, channel: channel });\n  };\n\n  this.twitchPing = function () {\n    _this3.ping();\n  };\n\n  this.twitchWhisper = function (twitchUser, text) {\n    if (twitchUser.username === _this3.username) {\n      return;\n    }\n    var user = new __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"User\"](twitchUser.username);\n    _this3.receiveWhisper({ user: user, text: text, channel: twitchUser.username });\n  };\n\n  this.twitchPong = function () {};\n\n  this.twitchRoomstate = function () {};\n\n  this.twitchSlowmode = function () {};\n\n  this.twitchSubscribers = function () {};\n\n  this.twitchSubscription = function () {};\n\n  this.twitchTimeout = function () {};\n\n  this.twitchMods = function () {};\n\n  this.twitchNotice = function () {};\n};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// twitch.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3953b34f49427510f074","module.exports = require(\"@exoplay/exobot\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@exoplay/exobot\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"tmi.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"tmi.js\"\n// module id = 1\n// module chunks = 0","import TMI from 'tmi.js';\n\nimport { Adapter, User } from '@exoplay/exobot';\n\nexport const EVENTS = {\n  connecting: 'twitchConnecting',\n  connected: 'twitchConnected',\n  logon: 'twitchLogon',\n  disconnected: 'twitchDisconnected',\n  reconnect: 'twitchReconnect',\n  chat: 'twitchChat',\n  emoteonly: 'twitchEmoteonly',\n  join: 'twitchJoin',\n  part: 'twitchPart',\n  mods: 'twitchMods',\n  notice: 'twitchNotice',\n  ping: 'twitchPing',\n  pong: 'twitchPong',\n  roomstate: 'twitchRoomstate',\n  slowmode: 'twitchSlowmode',\n  subscribers: 'twitchSubscribers',\n  subscription: 'twitchSubscription',\n  timeout: 'twitchTimeout',\n  whisper: 'twitchWhisper',\n};\n\nexport class TwitchAdapter extends Adapter {\n  name = 'Twitch';\n\n  constructor ({ username, oauthPassword, channels=[] }) {\n    super(...arguments);\n\n    this.username = username;\n    this.oauthPassword = oauthPassword;\n    this.channels = channels;\n  }\n\n  register (bot) {\n    super.register(...arguments);\n\n    const { username, oauthPassword, channels } = this;\n\n    if (!username || !oauthPassword) {\n      bot.log.error('username and oauthPassword are required to connect to Twitch.');\n      return;\n    }\n\n    if (!channels.length) {\n      bot.log.critical('No channels passed to Twitch adapter to connect to.');\n    }\n\n    this.client = new TMI.client({\n      channels,\n      identity: {\n        username,\n        password: oauthPassword,\n      },\n      options: {\n        debug: true,\n      },\n      secure: true,\n      reconnect: true,\n      logger: {\n        info: bot.log.info.bind(bot.log),\n        warn: bot.log.warning.bind(bot.log),\n        error: bot.log.error.bind(bot.log),\n      },\n      connection: {\n        cluster: 'aws',\n      },\n    });\n\n    this.client.connect();\n\n    Object.keys(EVENTS).forEach(twitchEvent => {\n      const mappedFn = this[EVENTS[twitchEvent]];\n      this.client.on(twitchEvent, (...args) => mappedFn(...args));\n      this.client.on(twitchEvent, (...args) => {\n        this.bot.emitter.emit(`twitch-${twitchEvent}`, ...args);\n      });\n    });\n  }\n\n  send (message) {\n    this.bot.log.debug(`Sending ${message.text} to ${message.channel}`);\n\n    if (message.whisper) {\n      return this.client.whisper(message.user.name, message.text);\n    }\n\n    this.client.say(message.channel, message.text);\n  }\n\n  twitchConnecting = () => {\n    this.status = Adapter.STATUS.CONNECTING;\n  }\n\n  twitchConnected = () => {\n    this.status = Adapter.STATUS.CONNECTED;\n    this.bot.emitter.emit('connected', this.id);\n    this.bot.log.notice('Connected to Twitch.');\n  }\n\n  twitchLogon = () => {\n    this.status = Adapter.STATUS.CONNECTED;\n    this.bot.log.notice('Successfully logged on to Twitch.');\n  }\n\n  twitchDisconnected = () => {\n    this.status = Adapter.STATUS.DISCONNECTED;\n    this.bot.log.warning('Disconnected from Twitch.');\n  }\n\n  twitchReconnect = () => {\n    this.status = Adapter.STATUS.RECONNECTING;\n    this.bot.log.notice('Reconnecting to Twitch.');\n  }\n\n  twitchChat = (channel, twitchUser, text) => {\n    if (twitchUser.username === this.username) { return; }\n    const user = new User(twitchUser.username);\n    this.receive({ user, text, channel });\n  }\n\n  twitchEmoteonly = () => {\n  }\n\n  twitchJoin = (channel, username) => {\n    if (username !== this.username) { return; }\n    const user = new User(username);\n    return this.enter({ user, channel });\n  }\n\n  twitchPart = (channel, username) => {\n    if (username !== this.username) { return; }\n    const user = new User(username);\n    return this.leave({ user, channel });\n  }\n\n  twitchPing = () => {\n    this.ping();\n  }\n\n  twitchWhisper = (twitchUser, text) => {\n    if (twitchUser.username === this.username) { return; }\n    const user = new User(twitchUser.username);\n    this.receiveWhisper({ user, text, channel: twitchUser.username });\n  }\n\n  twitchPong = () => { }\n\n  twitchRoomstate = () => { }\n\n  twitchSlowmode = () => { }\n\n  twitchSubscribers = () => { }\n\n  twitchSubscription = () => { }\n\n  twitchTimeout = () => { }\n\n  twitchMods = () => { }\n\n  twitchNotice = () => { }\n\n  getUserIdByUserName (name) {\n    // return username as the id\n    return name;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/twitch.js"],"sourceRoot":""}