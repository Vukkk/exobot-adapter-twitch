{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///twitch.js","webpack:///webpack/bootstrap 9ce64a7548b3b80fe826","webpack:///external \"@exoplay/exobot\"","webpack:///external \"tmi.js\"","webpack:///./src/twitch.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","Object","defineProperty","configurable","enumerable","get","o","object","property","prototype","hasOwnProperty","p","s","_asyncToGenerator","fn","gen","apply","arguments","Promise","resolve","reject","step","key","arg","info","error","done","then","err","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_0_tmi_js__","__WEBPACK_IMPORTED_MODULE_0_tmi_js___default","__esModule","__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__","__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default","EVENTS","TwitchAdapter","_createClass","defineProperties","target","props","length","descriptor","protoProps","staticProps","_get","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","connecting","connected","logon","disconnected","reconnect","chat","emoteonly","join","part","mods","notice","ping","pong","roomstate","slowmode","subscribers","subscription","timeout","whisper","_Adapter","_ref","username","oauthPassword","_ref$channels","channels","adapterName","_this","twitchConnecting","status","STATUS","CONNECTING","twitchConnected","CONNECTED","bot","emitter","emit","id","log","twitchLogon","twitchDisconnected","DISCONNECTED","warning","twitchReconnect","RECONNECTING","twitchEmoteonly","twitchPing","twitchPong","twitchRoomstate","twitchSlowmode","twitchSubscribers","twitchSubscription","twitchTimeout","twitchMods","twitchNotice","_this2","critical","client","a","identity","password","options","debug","secure","logger","bind","warn","connection","cluster","connect","keys","forEach","twitchEvent","mappedFn","on","_bot$emitter","_len","args","Array","_key","concat","message","text","channel","user","say","twitchChat","_x","_x2","_x3","_x4","_ref2","regeneratorRuntime","mark","_callee","twitchUser","wrap","_context","prev","next","abrupt","getUser","sent","receive","t0","stop","twitchJoin","_x5","_x6","_ref3","_callee2","_context2","enter","twitchPart","_x7","_x8","_ref4","_callee3","_context3","leave","twitchWhisper","_x9","_x10","_x11","_x12","_ref5","_callee4","_context4","receiveWhisper","getUserIdByUserName","_x13","_ref6","_callee5","botUser","_context5","adapterUserId","_this3","roleMapping","adapterUsers","roles","filter","role","map","userId","subscriber","push","mod","turbo"],"mappings":"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","file":"twitch.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@exoplay/exobot\"), require(\"tmi.js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@exoplay/exobot\", \"tmi.js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twitch.js\"] = factory(require(\"@exoplay/exobot\"), require(\"tmi.js\"));\n\telse\n\t\troot[\"twitch.js\"] = factory(root[\"@exoplay/exobot\"], root[\"tmi.js\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@exoplay/exobot\"), require(\"tmi.js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@exoplay/exobot\", \"tmi.js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twitch.js\"] = factory(require(\"@exoplay/exobot\"), require(\"tmi.js\"));\n\telse\n\t\troot[\"twitch.js\"] = factory(root[\"@exoplay/exobot\"], root[\"tmi.js\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"@exoplay/exobot\");\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"tmi.js\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tmi_js__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tmi_js___default = __WEBPACK_IMPORTED_MODULE_0_tmi_js__ && __WEBPACK_IMPORTED_MODULE_0_tmi_js__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_0_tmi_js__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_0_tmi_js__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_0_tmi_js___default, 'a', __WEBPACK_IMPORTED_MODULE_0_tmi_js___default);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__ && __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__.__esModule ? function() { return __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__['default'] } : function() { return __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__; };\n/* harmony import */ __webpack_require__.d(__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default, 'a', __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot___default);\n\n/* harmony export */ __webpack_require__.d(exports, \"EVENTS\", function() { return EVENTS; });\n/* harmony export */ __webpack_require__.d(exports, \"TwitchAdapter\", function() { return TwitchAdapter; });var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { return step(\"next\", value); }, function (err) { return step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\nvar EVENTS = {\n  connecting: 'twitchConnecting',\n  connected: 'twitchConnected',\n  logon: 'twitchLogon',\n  disconnected: 'twitchDisconnected',\n  reconnect: 'twitchReconnect',\n  chat: 'twitchChat',\n  emoteonly: 'twitchEmoteonly',\n  join: 'twitchJoin',\n  part: 'twitchPart',\n  mods: 'twitchMods',\n  notice: 'twitchNotice',\n  ping: 'twitchPing',\n  pong: 'twitchPong',\n  roomstate: 'twitchRoomstate',\n  slowmode: 'twitchSlowmode',\n  subscribers: 'twitchSubscribers',\n  subscription: 'twitchSubscription',\n  timeout: 'twitchTimeout',\n  whisper: 'twitchWhisper'\n};\n\nvar TwitchAdapter = function (_Adapter) {\n  _inherits(TwitchAdapter, _Adapter);\n\n  function TwitchAdapter(_ref) {\n    var username = _ref.username;\n    var oauthPassword = _ref.oauthPassword;\n    var _ref$channels = _ref.channels;\n    var channels = _ref$channels === undefined ? [] : _ref$channels;\n    var adapterName = _ref.adapterName;\n\n    _classCallCheck(this, TwitchAdapter);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TwitchAdapter).apply(this, arguments));\n\n    _this.name = 'Twitch';\n\n    _this.twitchConnecting = function () {\n      _this.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.CONNECTING;\n    };\n\n    _this.twitchConnected = function () {\n      _this.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.CONNECTED;\n      _this.bot.emitter.emit('connected', _this.id);\n      _this.bot.log.notice('Connected to Twitch as ' + _this.username);\n    };\n\n    _this.twitchLogon = function () {\n      _this.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.CONNECTED;\n      _this.bot.log.notice('Successfully logged on to Twitch as ' + _this.username);\n    };\n\n    _this.twitchDisconnected = function () {\n      _this.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.DISCONNECTED;\n      _this.bot.log.warning('Disconnected from Twitch.');\n    };\n\n    _this.twitchReconnect = function () {\n      _this.status = __WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"].STATUS.RECONNECTING;\n      _this.bot.log.notice('Reconnecting to Twitch.');\n    };\n\n    _this.twitchEmoteonly = function () {};\n\n    _this.twitchPing = function () {\n      _this.ping();\n    };\n\n    _this.twitchPong = function () {};\n\n    _this.twitchRoomstate = function () {};\n\n    _this.twitchSlowmode = function () {};\n\n    _this.twitchSubscribers = function () {};\n\n    _this.twitchSubscription = function () {};\n\n    _this.twitchTimeout = function () {};\n\n    _this.twitchMods = function () {};\n\n    _this.twitchNotice = function () {};\n\n    _this.username = username;\n    _this.oauthPassword = oauthPassword;\n    _this.channels = channels;\n    _this.name = adapterName || _this.name;\n    return _this;\n  }\n\n  _createClass(TwitchAdapter, [{\n    key: 'register',\n    value: function register(bot) {\n      var _this2 = this;\n\n      _get(Object.getPrototypeOf(TwitchAdapter.prototype), 'register', this).apply(this, arguments);\n\n      var username = this.username;\n      var oauthPassword = this.oauthPassword;\n      var channels = this.channels;\n\n\n      if (!username || !oauthPassword) {\n        bot.log.error('username and oauthPassword are required to connect to Twitch.');\n        return;\n      }\n\n      if (!channels.length) {\n        bot.log.critical('No channels passed to Twitch adapter to connect to.');\n      }\n\n      this.client = new __WEBPACK_IMPORTED_MODULE_0_tmi_js___default.a.client({\n        channels: channels,\n        identity: {\n          username: username,\n          password: oauthPassword\n        },\n        options: {\n          debug: true\n        },\n        secure: true,\n        reconnect: true,\n        logger: {\n          info: bot.log.info.bind(bot.log),\n          warn: bot.log.warning.bind(bot.log),\n          error: bot.log.error.bind(bot.log)\n        },\n        connection: {\n          cluster: 'aws'\n        }\n      });\n\n      this.client.connect();\n\n      Object.keys(EVENTS).forEach(function (twitchEvent) {\n        var mappedFn = _this2[EVENTS[twitchEvent]];\n        _this2.client.on(twitchEvent, function () {\n          return mappedFn.bind(_this2).apply(undefined, arguments);\n        });\n        _this2.client.on(twitchEvent, function () {\n          var _bot$emitter;\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          (_bot$emitter = _this2.bot.emitter).emit.apply(_bot$emitter, ['twitch-' + twitchEvent].concat(args));\n        });\n      });\n    }\n  }, {\n    key: 'send',\n    value: function send(message) {\n      this.bot.log.debug('Sending ' + message.text + ' to ' + message.channel);\n\n      if (message.whisper) {\n        return this.client.whisper(message.user.name, message.text);\n      }\n\n      this.client.say(message.channel, message.text);\n    }\n  }, {\n    key: 'twitchChat',\n    value: function () {\n      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee(channel, twitchUser, text, self) {\n        var user;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!self) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt('return');\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return this.getUser(twitchUser.username, twitchUser.username, twitchUser);\n\n              case 5:\n                user = _context.sent;\n\n                this.receive({ user: user, text: text, channel: channel });\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context['catch'](2);\n\n                this.bot.log.warn(_context.t0);\n\n              case 12:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9]]);\n      }));\n\n      function twitchChat(_x, _x2, _x3, _x4) {\n        return _ref2.apply(this, arguments);\n      }\n\n      return twitchChat;\n    }()\n  }, {\n    key: 'twitchJoin',\n    value: function () {\n      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(channel, username) {\n        var user;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(username !== this.username)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt('return');\n\n              case 2:\n                _context2.prev = 2;\n                _context2.next = 5;\n                return this.getUser(username, username);\n\n              case 5:\n                user = _context2.sent;\n                return _context2.abrupt('return', this.enter({ user: user, channel: channel }));\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2['catch'](2);\n\n                this.bot.log.warn(_context2.t0);\n\n              case 12:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 9]]);\n      }));\n\n      function twitchJoin(_x5, _x6) {\n        return _ref3.apply(this, arguments);\n      }\n\n      return twitchJoin;\n    }()\n  }, {\n    key: 'twitchPart',\n    value: function () {\n      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(channel, username) {\n        var user;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(username !== this.username)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt('return');\n\n              case 2:\n                _context3.prev = 2;\n                _context3.next = 5;\n                return this.getUser(username, username);\n\n              case 5:\n                user = _context3.sent;\n                return _context3.abrupt('return', this.leave({ user: user, channel: channel }));\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3['catch'](2);\n\n                this.bot.log.warn(_context3.t0);\n\n              case 12:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 9]]);\n      }));\n\n      function twitchPart(_x7, _x8) {\n        return _ref4.apply(this, arguments);\n      }\n\n      return twitchPart;\n    }()\n  }, {\n    key: 'twitchWhisper',\n    value: function () {\n      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark(function _callee4(username, twitchUser, text, self) {\n        var user;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!self) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt('return');\n\n              case 2:\n                _context4.prev = 2;\n                _context4.next = 5;\n                return this.getUser(twitchUser.username, twitchUser.username, twitchUser);\n\n              case 5:\n                user = _context4.sent;\n\n                this.receiveWhisper({ user: user, text: text, channel: twitchUser.username });\n                _context4.next = 12;\n                break;\n\n              case 9:\n                _context4.prev = 9;\n                _context4.t0 = _context4['catch'](2);\n\n                this.bot.log.warn(_context4.t0);\n\n              case 12:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[2, 9]]);\n      }));\n\n      function twitchWhisper(_x9, _x10, _x11, _x12) {\n        return _ref5.apply(this, arguments);\n      }\n\n      return twitchWhisper;\n    }()\n  }, {\n    key: 'getUserIdByUserName',\n    value: function () {\n      var _ref6 = _asyncToGenerator(regeneratorRuntime.mark(function _callee5(name) {\n        var botUser;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                botUser = void 0;\n                _context5.prev = 1;\n                _context5.next = 4;\n                return this.getUser(name, name);\n\n              case 4:\n                botUser = _context5.sent;\n                _context5.next = 10;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5['catch'](1);\n\n                this.bot.log.warn(_context5.t0);\n\n              case 10:\n                return _context5.abrupt('return', botUser.id);\n\n              case 11:\n              case 'end':\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[1, 7]]);\n      }));\n\n      function getUserIdByUserName(_x13) {\n        return _ref6.apply(this, arguments);\n      }\n\n      return getUserIdByUserName;\n    }()\n  }, {\n    key: 'getRolesForUser',\n    value: function getRolesForUser(adapterUserId) {\n      var _this3 = this;\n\n      if (this.roleMapping && this.adapterUsers && this.adapterUsers[adapterUserId]) {\n        return this.adapterUsers[adapterUserId].roles.filter(function (role) {\n          return _this3.roleMapping[role];\n        }).map(function (role) {\n          return _this3.roleMapping[role];\n        });\n      }\n\n      return [];\n    }\n  }, {\n    key: 'getRoles',\n    value: function getRoles(userId, user) {\n      var roles = [];\n      if (user) {\n        if (user.subscriber === true) {\n          roles.push('subscriber');\n        }\n\n        if (user.mod === true) {\n          roles.push('mod');\n        }\n\n        if (user.turbo === true) {\n          roles.push('turbo');\n        }\n        return roles;\n      }\n\n      return false;\n    }\n  }]);\n\n  return TwitchAdapter;\n}(__WEBPACK_IMPORTED_MODULE_1__exoplay_exobot__[\"Adapter\"]);\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// twitch.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9ce64a7548b3b80fe826","module.exports = require(\"@exoplay/exobot\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@exoplay/exobot\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"tmi.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"tmi.js\"\n// module id = 1\n// module chunks = 0","import TMI from 'tmi.js';\n\nimport { Adapter } from '@exoplay/exobot';\n\nexport const EVENTS = {\n  connecting: 'twitchConnecting',\n  connected: 'twitchConnected',\n  logon: 'twitchLogon',\n  disconnected: 'twitchDisconnected',\n  reconnect: 'twitchReconnect',\n  chat: 'twitchChat',\n  emoteonly: 'twitchEmoteonly',\n  join: 'twitchJoin',\n  part: 'twitchPart',\n  mods: 'twitchMods',\n  notice: 'twitchNotice',\n  ping: 'twitchPing',\n  pong: 'twitchPong',\n  roomstate: 'twitchRoomstate',\n  slowmode: 'twitchSlowmode',\n  subscribers: 'twitchSubscribers',\n  subscription: 'twitchSubscription',\n  timeout: 'twitchTimeout',\n  whisper: 'twitchWhisper',\n};\n\nexport class TwitchAdapter extends Adapter {\n  name = 'Twitch';\n\n  constructor ({ username, oauthPassword, channels=[], adapterName }) {\n    super(...arguments);\n\n    this.username = username;\n    this.oauthPassword = oauthPassword;\n    this.channels = channels;\n    this.name = adapterName || this.name;\n  }\n\n  register (bot) {\n    super.register(...arguments);\n\n    const { username, oauthPassword, channels } = this;\n\n    if (!username || !oauthPassword) {\n      bot.log.error('username and oauthPassword are required to connect to Twitch.');\n      return;\n    }\n\n    if (!channels.length) {\n      bot.log.critical('No channels passed to Twitch adapter to connect to.');\n    }\n\n    this.client = new TMI.client({\n      channels,\n      identity: {\n        username,\n        password: oauthPassword,\n      },\n      options: {\n        debug: true,\n      },\n      secure: true,\n      reconnect: true,\n      logger: {\n        info: bot.log.info.bind(bot.log),\n        warn: bot.log.warning.bind(bot.log),\n        error: bot.log.error.bind(bot.log),\n      },\n      connection: {\n        cluster: 'aws',\n      },\n    });\n\n\n    this.client.connect();\n\n    Object.keys(EVENTS).forEach(twitchEvent => {\n      const mappedFn = this[EVENTS[twitchEvent]];\n      this.client.on(twitchEvent, (...args) => mappedFn.bind(this)(...args));\n      this.client.on(twitchEvent, (...args) => {\n        this.bot.emitter.emit(`twitch-${twitchEvent}`, ...args);\n      });\n    });\n  }\n\n  send (message) {\n    this.bot.log.debug(`Sending ${message.text} to ${message.channel}`);\n\n    if (message.whisper) {\n      return this.client.whisper(message.user.name, message.text);\n    }\n\n    this.client.say(message.channel, message.text);\n  }\n\n  twitchConnecting = () => {\n    this.status = Adapter.STATUS.CONNECTING;\n  }\n\n  twitchConnected = () => {\n    this.status = Adapter.STATUS.CONNECTED;\n    this.bot.emitter.emit('connected', this.id);\n    this.bot.log.notice(`Connected to Twitch as ${this.username}`);\n  }\n\n  twitchLogon = () => {\n    this.status = Adapter.STATUS.CONNECTED;\n    this.bot.log.notice(`Successfully logged on to Twitch as ${this.username}`);\n  }\n\n  twitchDisconnected = () => {\n    this.status = Adapter.STATUS.DISCONNECTED;\n    this.bot.log.warning('Disconnected from Twitch.');\n  }\n\n  twitchReconnect = () => {\n    this.status = Adapter.STATUS.RECONNECTING;\n    this.bot.log.notice('Reconnecting to Twitch.');\n  }\n\n  async twitchChat (channel, twitchUser, text ,self) {\n    if (self) { return; }\n\n    try {\n      const user = await this.getUser(twitchUser.username, twitchUser.username, twitchUser);\n      this.receive({ user, text, channel });\n    } catch (err) {\n      this.bot.log.warn(err);\n    }\n\n  }\n\n  twitchEmoteonly = () => {\n  }\n\n  async twitchJoin (channel, username) {\n    if (username !== this.username) { return; }\n\n    try {\n      const user = await this.getUser(username, username);\n      return this.enter({ user, channel });\n    } catch (err) {\n      this.bot.log.warn(err);\n    }\n  }\n\n  async twitchPart (channel, username) {\n    if (username !== this.username) { return; }\n\n    try {\n      const user = await this.getUser(username, username);\n      return this.leave({ user, channel });\n    } catch (err) {\n      this.bot.log.warn(err);\n    }\n  }\n\n  twitchPing = () => {\n    this.ping();\n  }\n\n  async twitchWhisper (username, twitchUser, text, self) {\n    if (self) { return; }\n\n    try {\n      const user = await this.getUser(twitchUser.username, twitchUser.username, twitchUser);\n      this.receiveWhisper({ user, text, channel: twitchUser.username });\n    } catch (err) {\n      this.bot.log.warn(err);\n    }\n\n  }\n\n  twitchPong = () => { }\n\n  twitchRoomstate = () => { }\n\n  twitchSlowmode = () => { }\n\n  twitchSubscribers = () => { }\n\n  twitchSubscription = () => { }\n\n  twitchTimeout = () => { }\n\n  twitchMods = () => { }\n\n  twitchNotice = () => { }\n\n  async getUserIdByUserName (name) {\n    let botUser;\n    try {\n      botUser = await this.getUser(name, name);\n    } catch (err) {\n      this.bot.log.warn(err);\n    }\n\n    return botUser.id;\n  }\n\n  getRolesForUser (adapterUserId) {\n    if (this.roleMapping && this.adapterUsers && this.adapterUsers[adapterUserId]) {\n      return this.adapterUsers[adapterUserId].roles\n      .filter(role => this.roleMapping[role])\n      .map(role => this.roleMapping[role]);\n    }\n\n    return [];\n  }\n\n  getRoles(userId, user) {\n    const roles = [];\n    if (user) {\n      if (user.subscriber === true) {\n        roles.push('subscriber');\n      }\n\n      if (user.mod === true) {\n        roles.push('mod');\n      }\n\n      if (user.turbo === true) {\n        roles.push('turbo');\n      }\n      return roles;\n    }\n\n    return false;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/twitch.js"],"sourceRoot":""}